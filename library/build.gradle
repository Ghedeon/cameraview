// Copyright (C) 2016 The Android Open Source Project
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

apply plugin: 'com.android.library'
apply plugin: 'com.jfrog.bintray'

Properties props = new Properties()
props.load(file("version.properties").newDataInputStream())
props.each { prop ->
    project.ext.set(prop.key, prop.value)
}

android {
    compileSdkVersion rootProject.ext.compileSdkVersion
    buildToolsVersion rootProject.ext.buildToolsVersion

    defaultConfig {
        minSdkVersion rootProject.ext.minSdkVersion
        targetSdkVersion rootProject.ext.targetSdkVersion
        testInstrumentationRunner 'android.support.test.runner.AndroidJUnitRunner'
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
    sourceSets {
        main.java.srcDirs += 'src/main/base'
        main.java.srcDirs += 'src/main/api9'
        main.java.srcDirs += 'src/main/api14'
        main.java.srcDirs += 'src/main/api21'
    }
}

dependencies {
    compile "com.android.support:support-annotations:$supportLibraryVersion"
    compile "com.android.support:support-v4:$supportLibraryVersion"

    // Tests
    testCompile 'junit:junit:4.12'
    androidTestCompile('com.android.support.test:runner:0.5') {
        exclude module: 'support-annotations'
    }
    androidTestCompile('com.android.support.test.espresso:espresso-core:2.2.2') {
        exclude module: 'support-annotations'
    }
}

version = project.property('VERSION_NAME')
archivesBaseName = project.property('ARTIFACT_NAME')

bintray {
    user = project.hasProperty('BINTRAY_USER') ? project.property('BINTRAY_USER') : ''
    key = project.hasProperty('BINTRAY_KEY') ? project.property('BINTRAY_KEY') : ''
    configurations = ['archives']
    dryRun = true
    publish = false
    override = true
    pkg {
        repo = 'gradle'
        name = 'cameraview'
        group = 'com.ghedeon'
        desc = 'Google CamerView'
        userOrg = 'ghedeon'
        licenses = ['Apache-2.0']
        vcsUrl = 'https://github.com/Ghedeon/cameraview.git'
        publicDownloadNumbers = true
        version {
            name = project.property('VERSION_NAME')
            released = new Date()
        }
    }
}
